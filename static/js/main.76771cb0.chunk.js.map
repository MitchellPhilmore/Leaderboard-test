{"version":3,"sources":["logo.svg","UserRank/liam-avatar-round.png","UserRank/index.js","Leadershipboard/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserRank","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","class","src","useravatar","username","Component","LeadershipBoard","_this","state","ranking","_this2","axios","get","then","response","setState","data","results","length","Fragment","src_UserRank_0","login","picture","large","map","user","i","id","thumbnail","Math","floor","random","App","src_Leadershipboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76771cb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/liam-avatar-round.8e036976.png\";","import React,{Component} from 'react';\r\nimport './index.css'\r\nimport avatar from './liam-avatar-round.png'\r\n\r\nclass UserRank extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"userRank\">\r\n                {/* <h1 class=\"userRank-header\">LEADERBOARD</h1> */}\r\n                <div className=\"rating animated zoomIn\"><img class=\"user-avatar\" src={this.props.useravatar}></img></div>\r\n                <p class=\"rank\">\r\n                    <h2>{this.props.username}</h2>\r\n                    <h2>Rank <span class=\"number\"># 6</span> </h2>\r\n                    \r\n                    <h2>Record <span class=\"number\">22-17</span></h2>\r\n                    \r\n                    \r\n                    </p>\r\n                 <div class=\"break\" ></div>\r\n                \r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserRank","import React,{Component} from 'react'\r\nimport './index.css'\r\nimport axios from 'axios'\r\nimport UserRank from '../UserRank'\r\n\r\nclass LeadershipBoard extends Component{\r\n\r\n  constructor(props){\r\n      super(props)\r\n\r\n      this.state = {\r\n          ranking:[],\r\n          \r\n      }    \r\n  }\r\n  componentWillMount(){\r\n    axios.get('https://randomuser.me/api/?results=25')\r\n    .then(response=>response).then((response)=>\r\n    this.setState({ranking:response.data.results}))\r\n\r\n  }\r\n    render(){\r\n        return(\r\n          this.state.ranking.length > 0 ?\r\n         \r\n          <>\r\n            <UserRank username={this.state.ranking[5].login.username} useravatar={this.state.ranking[5].picture.large}/>\r\n            {/* <h1><span class=\"blue\">Leader Board</span></h1> */}\r\n\r\n<table class=\"container\">\r\n\t<thead>\r\n\t\t<tr>\r\n      <th><h1>Rank</h1></th>\r\n      <th><h1>Username</h1></th>\r\n      <th><h1>Wins</h1></th>\r\n\t\t\t<th><h1>Loses</h1></th>\r\n\t\t\t<th><h1>Streak</h1></th>\r\n\t\t\t<th><h1>Total bets</h1></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n      {this.state.ranking.map((user,i)=>{\r\n        return(\r\n        <tr>\r\n          {i + 1  === 1 ? <td id=\"first\">{i + 1} <sup>ST</sup></td>: i + 1 === 2 ? <td id=\"second\">{i + 1} <sup>ND</sup></td>:i + 1 === 3 ? <td id=\"third\">{i + 1} <sup>RD</sup></td>:<td>{i + 1}</td>}\r\n          {/* <td>{i + 1 === 1 ? i <sup>st</sup>:false}</td> */}\r\n          <td> <img class=\"avatar\" src={user.picture.thumbnail}/>{user.login.username}</td>\r\n          <td>{Math.floor(Math.random() * 40 + 1)}</td>\r\n          <td>{Math.floor(Math.random() * 20)}</td>\r\n          <td>{Math.floor(Math.random() * 10 + 1)}W</td>\r\n          <td>41</td>\r\n\t    \t</tr>\r\n\r\n        )\r\n      })}\r\n        \r\n  \r\n\t</tbody>\r\n</table>\r\n</>\r\n:false\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LeadershipBoard","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Leadershipboard from './Leadershipboard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Leadershipboard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}